{% comment %}
  Product Sizeswatch Widget Loader
  == Version: 2.0 v3  ==
{% endcomment %}
{% unless product.has_only_default_variant %}
  {%- liquid
    assign jsonConfig = shop.metafields.aframe_size_swatch.json_config.value
    assign enable_sizeswatch = jsonConfig.enable_sizeswatch
    assign swatch_shape = jsonConfig.swatch_shape
    assign tooltip_feature = jsonConfig.tooltip_feature
    assign in_stock_text = jsonConfig.in_stock_text
    assign out_of_stock_text = jsonConfig.out_of_stock_text
    assign low_inventory_text = jsonConfig.low_inventory_text
    assign low_inventory_count = jsonConfig.low_inventory_count | plus: 0
    assign home_featured = jsonConfig.home_featured
    assign collection_featured = jsonConfig.collection_featured
    assign search_featured = jsonConfig.search_featured
    assign swatch_size = jsonConfig.swatch_size
    assign swatch_alignment = jsonConfig.swatch_alignment
    assign show_hide_swatch_border = jsonConfig.show_hide_swatch_border
    assign show_hide_outofstock_swatch = jsonConfig.show_hide_outofstock_swatch
    assign put_cross_on_outofstock = jsonConfig.put_cross_on_outofstock
    assign variant_option_name = jsonConfig.variant_option_name

    assign thisvariantcount = 0
  -%}

  {% if enable_sizeswatch == 'on' %}
    {%- liquid
      # tempalte is collection / home
      assign templatename = template | split: '.' | first
      assign validtodisplay = false

      if templatename == 'collection' and collection_featured == 'on'
        assign validtodisplay = true
      endif

      if templatename == 'index' and home_featured == 'on'
        assign validtodisplay = true
      endif

      if template.name == 'search'  and search_featured == 'on'
        assign validtodisplay = true
      endif

      # variable for swatches to link to product
      assign variant_id_ind = ''
      assign product_handle_ind = product.handle
    -%}

    {% if validtodisplay == true %}
      {% for option in product.options_with_values %}
        <!-- Option: size , color -->
        {%- liquid
          assign option_name = option.name | downcase
          assign variant_option_name_ind = variant_option_name | downcase | split: ',' | strip
        -%}

        {% if variant_option_name_ind contains option_name %}
          {%- liquid
            #  Position of size attribute
            #  {{ option | json }}
            assign position = 'option' | append: option.position
            assign finalval = ''
          -%}

          {%- liquid
            for value in option.values
              for variant in product.variants
                if variant.option1 == value or variant.option2 == value or variant.option3 == value
                  if variant.available
                    assign variant_count = ''
                    # if variant.inventory_management is blank : no inventory management
                    if variant.inventory_management != blank
                      # variant.inventory_policy is deny then only inventory is tracked for low inventory
                      if variant.inventory_policy == 'deny'
                        assign variant_count = variant.inventory_quantity
                      endif
                    endif

                    assign finalval = finalval | append: value | append: '||' | append: 1 | append: '||' | append: variant_count | append: ','
                  else
                    assign finalval = finalval | append: value | append: '||' | append: 0 | append: '||,'
                  endif
                endif
              endfor
            endfor
          -%}

          <div class="swatch-wrap {{ swatch_alignment }} swatchprimarywrap">
            <!-- check variants value to assign variant id to swatches -->
            {% assign optionsavailable = '' %}
            {% for variantsinfo in product.variants %}
              {%- liquid
                assign variant_id_ind = variantsinfo.id
                assign variants_size = variantsinfo[position]
                assign hasoption = false
                assign ind_option = optionsavailable | split: ','

                for optionsavailable1 in ind_option
                  if optionsavailable1 == variants_size
                    assign hasoption = true
                  endif
                endfor
              -%}

              {% if optionsavailable contains variants_size and hasoption %}
              {% else %}
                {%- liquid
                  for value in option.values
                    assign thisvariantstockkey = variants_size | append: '||1'
                    assign allvariantsval = finalval | split: ','
                    assign variantisinstock = false
                    assign thisvariantcount = 0
                  endfor

                  for onevariantval in allvariantsval
                    assign onevariantvalonly = onevariantval | split: '||'
                    assign variantplusavai = onevariantvalonly[0] | append: '||' | append: onevariantvalonly[1]

                    if variantplusavai == thisvariantstockkey
                      assign variantisinstock = true
                    endif

                    if variants_size == onevariantvalonly[0]
                      if onevariantvalonly[2] != blank
                        assign thisvariantcount = thisvariantcount | plus: onevariantvalonly[2]
                      endif
                    endif
                  endfor

                  assign optionsavailable = optionsavailable | append: variants_size | append: ','

                  ### The following is the logic for added css classes based on configs
                  assign cssClasses = '' 
                  if tooltip_feature == 'on'
                    assign cssClasses = cssClasses | append: ' ' | append: 'tooltip-swatch'
                  endif

                  if swatch_shape == 'circle'
                    assign cssClasses = cssClasses | append: ' ' | append: 'circle-design'
                  elsif swatch_shape == 'rounded_rectangle'
                    assign cssClasses = cssClasses | append: ' ' | append: 'rounded-rect-design'
                  else
                    assign cssClasses = cssClasses | append: ' ' | append: 'rect-design'
                  endif

                  if swatch_size == 'extrasmall'
                    assign cssClasses = cssClasses | append: ' ' | append: 'extrasmall-size'
                  elsif swatch_size == 'small'
                    assign cssClasses = cssClasses | append: ' ' | append: 'small-size'
                  elsif swatch_size == 'large'
                    assign cssClasses = cssClasses | append: ' ' | append: 'large-size'
                  else
                    assign cssClasses = cssClasses | append: ' ' | append: 'medium-size'
                  endif

                  if show_hide_swatch_border == 'off'
                    assign cssClasses = cssClasses | append: ' ' | append: 'no-border-swatches'
                  endif

                  if variantisinstock 
                    assign cssClasses = cssClasses | append: ' ' | append: 'in-stock-option'
                  else 
                    assign cssClasses = cssClasses | append: ' ' | append: 'out-of-stock-option'

                    if show_hide_outofstock_swatch == 'off' 
                      assign cssClasses = cssClasses | append: ' ' | append: 'hide-outofstock-swatches'
                    endif 

                    if show_hide_outofstock_swatch == 'on' and put_cross_on_outofstock == 'put_strike_swatches'
                      assign cssClasses = cssClasses | append: ' ' | append: 'strike-outofstock-swatches'
                    elsif show_hide_outofstock_swatch == 'on' and put_cross_on_outofstock == 'put_cross_swatches'
                      assign cssClasses = cssClasses | append: ' ' | append: 'crosscross'
                    endif
                  endif

                  assign tooltipText = ''
                  if tooltip_feature == 'on'
                    if variantisinstock
                      if thisvariantcount > 0 and thisvariantcount <= low_inventory_count
                        assign tooltipText = low_inventory_text
                      else
                        assign tooltipText = in_stock_text
                      endif
                    else
                      assign tooltipText = out_of_stock_text
                    endif
                  endif

                -%}

                <a href="/products/{{ product_handle_ind }}/?variant={{ variant_id_ind }}">
                  <div class="individual-option data-inventory-{{ thisvariantcount }} {{ cssClasses }}" >
                    {{ variants_size | escape }}
                    {% if tooltip_feature == 'on' -%}
                      <span class='tooltip-swatch-text'>
                        {{ tooltipText | escape }}
                      </span>
                    {%- endif %}
                  </div>
                </a>
              {% endif %}
            {% endfor %}
          </div>
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endif %}
{% endunless %}
{%- liquid
  # Read color settings from raw config as for some reasons
  # json settings couldn't output within style tag
  assign rawConfig = shop.metafields.aframe_size_swatch.config | remove: '{' | remove: '}'
  assign configData = rawConfig | split: ','
  for config in configData
    assign keyval = config | split: ':'
    assign key = keyval[0] | remove: '"'
    assign keyval = keyval[1] | remove: '"' | replace: '||', ','
    case key 
      when "swatch_border_color"
        assign swatch_border_color = keyval
      when "swatch_background_color"
        assign swatch_background_color = keyval
      when "swatch_text_border_color_onhover"
        assign swatch_text_border_color_onhover = keyval
      when "swatch_background_color_onhover"
        assign swatch_background_color_onhover = keyval
      when "outstock_swatch_border_color"
        assign outstock_swatch_border_color = keyval
      when "outstock_swatch_background_color"
        assign outstock_swatch_background_color = keyval
      when "outstock_swatch_text_border_color_onhover"
        assign outstock_swatch_text_border_color_onhover = keyval
      when "outstock_swatch_background_color_onhover"
        assign outstock_swatch_background_color_onhover = keyval
    endcase
  endfor
-%}

<style type="text/css">

  .individual-option {
    z-index: 3;
    display: inline-block;
    text-align: center;
    border: 1px solid {{ swatch_border_color }};
    line-height:35px; 
    margin: 0px 0px 5px 0px;
    color: {{ swatch_border_color }};
    border-color: {{ swatch_border_color }};
    background-color:{{ swatch_background_color }};
  }

  .individual-option:hover{
    color: {{ swatch_text_border_color_onhover }};
    border-color:{{ swatch_text_border_color_onhover }};
    background-color:{{ swatch_background_color_onhover }};
  }
    
  .individual-option.out-of-stock-option{
    color: {{ outstock_swatch_border_color }};
    border-color:{{ outstock_swatch_border_color }};
    background-color:{{ outstock_swatch_background_color }};
  }
  
  .individual-option.out-of-stock-option:hover{
    color:{{ outstock_swatch_text_border_color_onhover }};
    border-color:{{ outstock_swatch_text_border_color_onhover }};
    background-color:{{ outstock_swatch_background_color_onhover }};
  }

  .individual-option.extrasmall-size{
    height: 20px;
    width: 20px;
    line-height:15px;
    font-size: 0.8rem;
  }
  
  .individual-option.extrasmall-size.rect-design,
  .individual-option.extrasmall-size.rounded-rect-design{
    min-width: 20x;
    width: auto;
    padding-left: 2px;
    padding-right: 2px;
  }

  .individual-option.small-size{
    height:25px;
    width:25px;
    line-height:25px;
  }
  
  .individual-option.medium-size{
    height:35px;
    width:35px;
    line-height:35px;
    font-size: 1.2rem;
  }
  
  .individual-option.large-size{
    height:45px;
    width:45px;
    line-height:45px;
    font-size: 1.6rem;
  }

  .individual-option.rect-design{
    width:auto;
    padding-left:10px;
    padding-right:10px;
  }
  
  .individual-option.circle-design{
    border-radius:50%;
  }
  
  .individual-option.rounded-rect-design{
    border-radius:5px;
    padding:0 5px;
    width:auto;
  }
  
  .swatch-wrap{
    padding:0 0 20px 0;
  }
  
  .swatch-wrap.center{
    text-align:center;
  }
  
  .swatch-wrap.right{
    text-align:right; 
    justify-content: flex-end;
  }
  
  .individual-option.rect-design.small-size{
    padding-left:5px;
    padding-right:5px;
  }

  .individual-option.small-size.rect-design,
  .individual-option.small-size.rounded-rect-design{
    min-width:25px;
  }
  
  .individual-option.medium-size.rect-design,
  .individual-option.medium-size.rounded-rect-design{
    min-width:35px;
  }
  
  .individual-option.large-size.rect-design,
  .individual-option.large-size.rounded-rect-design{
    min-width:45px;
  }
  
  .tooltip-swatch{
    position:relative;
    display:inline-block;
  }
  
  .tooltip-swatch .tooltip-swatch-text{
    visibility:hidden;
    width:110px;
    background-color:#000;
    color:#fff;
    text-align:center;
    border-radius:6px;
    padding:2px 0;
    opacity:.8;
    position:absolute;
    z-index:1;
    bottom:150%;
    left:50%;
    margin-left:-32px;
  }
  
  .tooltip-swatch:hover .tooltip-swatch-text{
    visibility:visible;
  }
  
  .tooltip-swatch .tooltip-swatch-text::after{
    content:"";
    position:absolute;
    top:100%;
    left:50%;
    margin-left:-30px;
    border-width:5px;
    border-style:solid;
    border-color:#000 transparent transparent transparent;
  }
  
  .individual-option{
    cursor:default;
  }
  
  .swatchprimarywrap{
    visibility:hidden;
  }
  
  .individual-option.medium-size.rounded-rect-design,
  .individual-option.medium-size.rect-design{
    width: auto !important;
  }
  
  .no-border-swatches{
    border: none !important;
  }
    
  .hide-outofstock-swatches{display: none;}.strike-outofstock-swatches{text-decoration: line-through;}

  .swatch-wrap.center{text-align:center;justify-content:center;}
    .swatch-wrap.swatchprimarywrap {
      display: flex;
      flex-wrap: wrap;
  }

  .swatch-wrap a {
      margin-left: 5px;
  }

  .swatch-wrap a.center:first-child {
    margin-left: 0px;
  }
    
  .crosscross{
    position:relative;
  }
  .crosscross::before {
    content: '';
    background-image: url(https://cdn.shopify.com/s/files/1/0520/9243/6659/files/cancel_2.png?v=1617615766);
    width: 100%;
    height: 100%;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%, auto;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
  }

  .swatch-wrap a{
    text-decoration: none;
  }

  .swatch-wrap.left.swatchprimarywrap > :first-child {
      margin: 0;
  }
  
  .swatch-wrap.swatchprimarywrap {
      visibility: visible;
  }
</style>

<script type="text/javascript">
  window.onload = function () {
    setTimeout(function () {
      'visible' != document.querySelector('.swatchprimarywrap').style.visibility &&
        [].forEach.call(document.querySelectorAll('.swatchprimarywrap'), function (e) {
          e.parentNode.removeChild(e);
        });
    }, 4e3);
  };
</script>
